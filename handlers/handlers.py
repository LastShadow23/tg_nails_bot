from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Filter
from database.requests import *
import os
from database.models import *

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

import keyboards.keyboards as kb

router = Router()


class Admin(Filter):
    async def __call__(self, message: Message) -> bool:
        return message.from_user.id == int(os.getenv('ADMIN_ID'))


@router.message(F.text == '/start')
async def cmd_start(message: Message):
    await message.answer_sticker('CAACAgIAAxkBAAEBPPllFdFBeCkiCCt2glfEsYSis9BlvgAC3AUAAj-VzArxX-zMZBcVlzAE')
    await message.answer(f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç –æ—Ç –î–∏–∞–Ω—ã üíï',
                         reply_markup=kb.main)
    if message.from_user.id == int(os.getenv('ADMIN_ID')):
        await message.answer(f'–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=kb.admin)


@router.message(F.text == 'ü§∑‚Äç‚ôÄÔ∏è –ü–æ–º–æ—â—å')
async def sos(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=kb.sos)


@router.callback_query(F.data == 'Telegram')
async def telegram(callback: CallbackQuery):
    await callback.message.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {callback.data}')


@router.message()
async def echo(message: Message):
    free = await get_free_app()
    await message.answer(f"–≤–æ—Ç: {free}")
